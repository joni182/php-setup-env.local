
# Install Composer
# https://pipo.blog/articles/20160607-ansible-composer-install
- name: install composer
  become: yes
  hosts: localhost
  vars:
    composer_url: https://getcomposer.org/download/latest-stable/composer.phar
  tasks:
    # Install Composer the lightweight way (without using installer)
    # https://getcomposer.org/download
    - name: Composer | Install Composer latest-stable
      get_url:
        url: '{{ composer_url }}'
        checksum: 'sha256:{{ composer_url }}.sha256sum'
        dest: /usr/local/bin/composer.phar
        mode: 0755

    - name: Composer | Symlink composer.phar
      file:
        src: composer.phar
        dest: /usr/local/bin/composer
        state: link
# Set up Mysql 
# https://medium.com/@kelom.x/ansible-mysql-installation-2513d0f70faf
- name: setup Mysql with db
  become: yes
  hosts: localhost
  tasks:
    - name: Installing Mysql  and dependencies
      package:
       name: "{{item}}"
       state: present
       update_cache: yes
      loop:
        - mysql-server
        - mysql-client 
        - python3-mysqldb
        - libmysqlclient-dev
      become: yes    
    - name: start and enable mysql service
      service:
        name: mysql
        state: started
        enabled: yes    
    - name: creating mysql user
      mysql_user:
        name: root
        password: root
        login_user: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: mysql_root_password is defined and mycnf.stat.exists == false
    - name: Create database
      mysql_db:
        name: localhost
        login_host: localhost
        login_user: root
        login_password: root
        state: present
      notify:
        - Restart mysql  
  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted
# Set up PHP
- name: Set up PHP
  hosts: localhost
  become: true
  tasks:
  - name: install git
    apt: name=git state=present
  - name: install vim
    apt: name=vim state=present
  - name: Installation install software-properties-common
    apt: name=software-properties-common
  - name: "Repo PHP 7.4"
    apt_repository:
      repo="ppa:ondrej/php"
  - name: "Updating the repo"
    apt: update_cache=yes
  - name: Installation PHP 5.6
    apt: name=php5.6 state=present
  - name: Installation PHP 7.4
    apt: name=php7.4 state=present
  - name: Installation PHP 8.1
    apt: name=php8.1 state=present
  - name: install lamp stack
    apt:
      pkg:
        - php5.6-mysql
        - php5.6-curl
        - php5.6-json
        - php5.6-cgi
        - php5.6-xsl
        - php5.6-cgi
        - php5.6-gd
        - php5.6-mbstring
        - php5.6-zip
        - php5.6-xmlrpc
        - php5.6-soap
        - php5.6-intl
        - php7.4-mysql
        - php7.4-curl
        - php7.4-json
        - php7.4-cgi
        - php7.4-xsl
        - php7.4-cgi
        - php7.4-gd
        - php7.4-mbstring
        - php7.4-zip
        - php7.4-xmlrpc
        - php7.4-soap
        - php7.4-intl
        - libapache2-mod-php
        - php8.1-cli
        - php8.1-common
        - php8.1-mysql
        - php8.1-zip
        - php8.1-gd
        - php8.1-mbstring
        - php8.1-curl
        - php8.1-xml
        - php8.1-bcmath
      state: present
      update_cache: yes
# Install apache
- name: install apache2
  hosts: localhost
  tasks:
  - name: install apache2
    become: true
    apt: name=apache2 update_cache=yes state=latest
# Install apache
- name: Configure apache2
  hosts: localhost
  tasks:
  - copy:
      src: ./resources/apache2.conf
      dest: /etc/apache2/apache2.conf
      owner: root
      group: root
      mode: 0644
    become: true
  - copy:
      src: ./resources/000-default.conf
      dest: /etc/apache2/sites-available/000-default.conf
      owner: root
      group: root
      mode: 0644
    become: true
  - name: Creates directory
    file:
      path: ~/www/php.info/public_html
      owner: joni
      group: joni
      state: directory
    become: true
  - copy: 
      content: "<?php phpinfo(); ?>" 
      dest: ~/www/php.info/public_html/index.php
      owner: joni
      group: joni
    become: true
  - name: Start service apache2, if not started
    ansible.builtin.service:
      name: apache2
      state: started
    become: true
# Additional software
- name: Install DBeaver
  become: yes
  hosts: localhost
  tasks:
  - name: Install dbeaver-ce
    community.general.snap:
      name: dbeaver-ce